@inherits LayoutComponentBase

<MudThemeProvider Theme="theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout >
    @*Header*@
    <MudAppBar Elevation="0" Color="Color.Primary" Dense="true" Fixed="true">
         <MudStack AlignItems="AlignItems.Center" Row="true" Spacing="2" Class="mr-5">
                <MudImage Src="images/leaf.png" Alt="" Elevation="25" Class="rounded-lg" Style="height:25px; width:25px; font-size:2rem;" />
                @if (_leftDrawerOpen)
                {
                    <MudText Typo="Typo.h4" Class="page-title mt-2">BlazorNifty</MudText>
                }

         </MudStack>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
        <MudIconButton Icon="@Icons.Outlined.Settings" Color="Color.Inherit" OnClick="RightDrawerToggle" />
    </MudAppBar>

    @*Navmenu*@

    <MudDrawer @bind-Open="@_leftDrawerOpen" Elevation="1" Variant="@DrawerVariant.Mini" ClipMode="DrawerClipMode.Docked" Fixed="false" Class="drawer-left-unfixed-height">
        @*<MudDrawerHeader Dense="true">
           
        </MudDrawerHeader>*@

        @if (_leftDrawerOpen)
        {
            <div class="nav-menu-container">
                <NavMenu />
            </div>

        }
        else
        {
            <div class="nav-menu-container">
                <MiniNavMenu />
            </div>
        }

    </MudDrawer>

    @*Sidebar*@
    <MudDrawer @bind-Open="@_rightDrawerOpen" Elevation="0" Anchor="Anchor.End" Class="airhaus-sidebar" Variant="@DrawerVariant.Temporary">
        @if (_rightDrawerOpen)
        {
            <div class="airhaus-sidebar-container">
                <MudTabs Elevation="0" DisableRipple="true" DisableSliderAnimation="true" Centered="true">

                    <MudTabPanel Class="simple-tab" Style="min-width: 75px; padding: 6px 2px">
                        <TabContent>
                            <MudStack AlignItems="AlignItems.Center">
                                <MudIcon Icon="bi bi-chat" Style="font-size: 1.3rem; color: lightgray" Class="mb-1"></MudIcon>
                                <MudText Typo="Typo.caption">Chat</MudText>
                            </MudStack>
                        </TabContent>
                        <ChildContent>

                        </ChildContent>
                    </MudTabPanel>

                    <MudTabPanel Class="simple-tab" Style="min-width: 75px; padding: 6px 2px">
                        <TabContent>
                            <MudStack AlignItems="AlignItems.Center">
                                <MudIcon Icon="bi bi-info-circle" Style="font-size: 1.3rem; color: lightgray" Class="mb-1"></MudIcon>
                                <MudText Typo="Typo.caption">Reports</MudText>
                            </MudStack>
                        </TabContent>
                        <ChildContent>

                        </ChildContent>
                    </MudTabPanel>

                    <MudTabPanel Class="simple-tab" Style="min-width: 75px; padding: 6px 2px">
                        <TabContent>
                            <MudStack AlignItems="AlignItems.Center">
                                <MudIcon Icon="bi bi-gear" Style="font-size: 1.3rem; color: lightgray" Class="mb-1"></MudIcon>
                                <MudText Typo="Typo.caption">Settings</MudText>
                            </MudStack>
                        </TabContent>
                        <ChildContent>

                        </ChildContent>
                    </MudTabPanel>
                </MudTabs>
            </div>


        }

    </MudDrawer>


    <MudMainContent Class="@mainContentClass">
        <MudContainer MaxWidth="MaxWidth.False"  Style="padding-left: 0px; padding-right:0px">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _leftDrawerOpen = true;
    bool _rightDrawerOpen = false;
    bool navMenuFixed = true;

    string mainContentClass = "main-content-unfixed";

    MudTheme theme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = "#25476a",
                Success = "#9FCC2E",
                Error = "DF5645"
            },
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] { "Poppins", "Open Sans", "Segoe UI", "Helvetica Neue", "Noto Sans", "Liberation Sans", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" }
                },
                H1 = new H1() { FontSize = "calc(1.3125rem + .75vw)", FontWeight = 500, LineHeight = 1.2 },
                H2 = new H2() { FontSize = "calc(1.275rem + .3vw);", FontWeight = 500, LineHeight = 1.2 },
                H3 = new H3() { FontSize = "calc(1.25625rem + .075vw)", FontWeight = 500, LineHeight = 1.2 },
                H4 = new H4() { FontSize = "1.125rem", FontWeight = 500, LineHeight = 1.2 },
                H5 = new H5() { FontSize = ".9375rem", FontWeight = 500, LineHeight = 1.2 },
                H6 = new H6() { FontSize = ".75rem", FontWeight = 500, LineHeight = 1.2 },
                Body1 = new Body1() { FontSize = ".9375rem", LineHeight = 1.5, FontWeight = 400 },
                Body2 = new Body2() { FontSize = ".835rem", LineHeight = 1.5, FontWeight = 400 }
            },
            LayoutProperties = new LayoutProperties()
            {

                DrawerWidthLeft = "220px",
                DrawerWidthRight = "275px",

            }
        };

    void DrawerToggle()
    {
        _leftDrawerOpen = !_leftDrawerOpen;

        if (_leftDrawerOpen && navMenuFixed)
        {
            mainContentClass = "main-content-unfixed";
        }
        else if (!_leftDrawerOpen && navMenuFixed)
        {
            mainContentClass = "main-content-unfixed-mini";
        }

        StateHasChanged();
    }

    void RightDrawerToggle()
    {
        _rightDrawerOpen = !_rightDrawerOpen;

        StateHasChanged();
    }
}